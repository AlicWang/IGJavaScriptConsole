(function(){if(!this.require){var e={},r={},o=function(s,i){var u,c,a=t(i,s),l=t(a,"./index");if(u=r[a]||r[l])return u;if(c=e[a]||e[a=l])return u={id:a,exports:{}},r[a]=u.exports,c(u.exports,function(e){return o(e,n(a))},u),r[a]=u.exports;throw"module "+s+" not found"},t=function(e,r){var o,t,n=[];o=/^\.\.?(\/|$)/.test(r)?[e,r].join("/").split("/"):r.split("/");for(var s=0,i=o.length;i>s;s++)t=o[s],".."==t?n.pop():"."!=t&&""!=t&&n.push(t);return n.join("/")},n=function(e){return e.split("/").slice(0,-1).join("/")};this.require=function(e){return o(e,"")},this.require.define=function(r){for(var o in r)e[o]=r[o]},this.require.modules=e,this.require.cache=r}return this.require}).call(this),this.require.define({application:function(exports,require,module){(function(){var CoffeeScriptProcessor,ConsoleController,JavaScriptProcessor,WebSocketProcessor,_ref,__hasProp={}.hasOwnProperty,__extends=function(e,r){function o(){this.constructor=e}for(var t in r)__hasProp.call(r,t)&&(e[t]=r[t]);return o.prototype=r.prototype,e.prototype=new o,e.__super__=r.prototype,e},__bind=function(e,r){return function(){return e.apply(r,arguments)}};JavaScriptProcessor=function(){function JavaScriptProcessor(){}return JavaScriptProcessor.prototype.evaulate=function(source,success,failure){var e,result;try{return result=eval(source),success(result)}catch(_error){return e=_error,failure(e)}},JavaScriptProcessor}(),CoffeeScriptProcessor=function(e){function r(){return _ref=r.__super__.constructor.apply(this,arguments)}return __extends(r,e),r.prototype.evaulate=function(e,r,o){var t,n;try{return n=CoffeeScript.eval(e),r(n)}catch(s){return t=s,o(t)}},r}(JavaScriptProcessor),WebSocketProcessor=function(){function e(e,r,o){var t=this;this.onReady=e,null==o&&(o="ruby"),this.evaulate=__bind(this.evaulate,this),console.log("connect to websocket: "+r),this.ws=new WebSocket(r),this.language=o,this.ws.onopen=function(){return console.log("opened"),t.onReady()},this.ws.onmessage=function(e){var r,o;return console.log("event",e),r=e.data?JSON.parse(e.data):{status:"error",message:"no response"},r?"ok"!==r.status?"error"===r.status?(console.error("error, event=",e),o=r.message?r.message:"Unknown error: "+e,t.failedWithMessage(o)):(console.error("unknown error, event=",e),t.failedWithMessage("unknown error: "+e)):(console.log("command: ok"),t.success?(t.success(r.result),t.success=null):void 0):(console.error("unexpected data format",e),t.failedWithMessage("unexpected data format: "+e))},this.ws.onclose=function(){return t.failedWithMessage("Connection closed")},this.ws.onerror=function(e){return console.log("error",e),t.failedWithMessage("Unknown error: "+e)}}return e.prototype.failedWithMessage=function(e){return this.failure?(this.failure(e),this.failure=null):void 0},e.prototype.evaulate=function(e,r,o){var t,n;return n={command:"eval",source:e,language:this.language},t=JSON.stringify(n),this.success=r,this.failure=o,this.ws.send(t)},e}(),ConsoleController=function(){function e(e,r){var o,t=this;this.jsConsole=$("#console").jqconsole("Connecting to "+e+"\n","> "),o=function(){return t.prompt()},this.processor=new WebSocketProcessor(o,e,r)}return e.prototype.prompt=function(){var e=this;return this.jsConsole.Prompt(!0,function(r){var o,t;return t=function(r){return e.jsConsole.Write(r+"\n","jqconsole-output"),e.prompt()},o=function(r){return e.jsConsole.Write(r+"\n","jqconsole-error"),e.prompt()},e.processor.evaulate(r,t,o)})},e}(),module.exports=function(){var e,r;return e="%%WEBSOCKET_URL%%",e.match("^%%WEBSOCKET_")&&(e="ws://localhost:3300/context"),r=new ConsoleController(e,"ruby"),r.prompt()}}).call(this)}});